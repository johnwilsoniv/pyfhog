name: Build Wheels

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          # Build for Python 3.8-3.12
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"

          # Skip 32-bit builds and musl on Linux
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"

          # macOS: Build universal2 wheels (Intel + Apple Silicon)
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"

          # Linux: Build for x86_64 and aarch64
          CIBW_ARCHS_LINUX: "x86_64 aarch64"

          # Windows: Build for x86_64 only
          CIBW_ARCHS_WINDOWS: "AMD64"

          # Install build dependencies
          CIBW_BEFORE_BUILD: "pip install pybind11 numpy"

          # Run tests after building
          CIBW_TEST_COMMAND: "python -c 'import pyfhog; import numpy as np; img = np.random.randint(0, 255, (112, 112, 3), dtype=np.uint8); features = pyfhog.extract_fhog_features(img); assert features.shape == (4464,), f\"Expected (4464,) got {features.shape}\"; print(f\"âœ“ Test passed: {features.shape}\")'"
          CIBW_TEST_REQUIRES: "numpy"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
